// Breakpoints
$bp-xsmall: 28.125em; // 450px;
$bp-small: 48em; // 768px;
// $bp-menu: 59.6875em; // 955px;
$bp-menu: 65.375em; // 1046px;
$bp-medium: 64em; // 1024px;
$bp-large: 85.375em; // 1366px;
$bp-xlarge: 120em; // 1920px;
$bp-xxlarge: 160em; // 2560px;

// Media Queries
$mq-xsmall: "screen and (min-width: #{$bp-xsmall})";
$mq-small: "screen and (min-width: #{$bp-small})";
$mq-menu: "screen and (min-width: #{$bp-menu})";
$mq-medium: "screen and (min-width: #{$bp-medium})";
$mq-large: "screen and (min-width: #{$bp-large})";
$mq-xlarge: "screen and (min-width: #{$bp-xlarge})";
$mq-xxlarge: "screen and (min-width: #{$bp-xxlarge})";
$mq-retina: "(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)";
$mq-ie: "all and (-ms-high-contrast: none), (-ms-high-contrast: active)";

// Colors
$primary-color: #c5050c;
$secondary-color: #777777;
$tertiary-color: #6e6e6e;
$success-color: #5cb85c;
$alt-link: #0054ad;
$warning: #fff3d9;
$warning-em: #ffae00;
$danger: #a94442;
$danger-bg: #f2dede;
$alert-color: #ec5840;
$light-gray: #f1f1f1;
$light-gray-2: #e1e1e1;
$light-gray-3: #cacaca;
$dark-gray: #818181;
$black: #3e3e3e;
$white: #fff;
$off-white: #fefefe;
$disabled: #969696;

$default-font-size: 1.6rem;
$default-font-size-mobile: 1.8rem;
$default-page-width: 100rem;

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html,
body {
    margin: 0px auto;
    width: 100%;
    box-sizing: border-box;
    background: $white;
    color: $black;
}

body {
    position: relative;
}

html {
    // This defines what 1rem is.
    font-size: 62.5%; // 1rem = 10px;
    font-style: normal;
    font-weight: normal;
}

body {
    font-size: $default-font-size-mobile;
    font-family: "Montserrat", Helvetica, Arial, sans-serif;
    font-weight: 400;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    overflow: hidden;

    @media #{$mq-medium} {
        font-size: $default-font-size;
    }
}

.wi-50 {
    width: 50%;
    float: none !important;
}

.btn {
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px solid transparent;
    border-radius: 4px;
    transition: all 0.2s ease-in-out;
    padding: 0px 1.5rem;
    text-decoration: none;
    cursor: pointer;
    height: 5rem;
    width: 100%;

    &:hover {
        color: currentColor;
    }

    &-primary {
        background-color: $primary-color;
        border-color: $primary-color;
        color: $white;

        &:hover {
            background-color: darken($primary-color, 8%);
            border-color: darken($primary-color, 10%);
            color: $white;
        }

        &:active,
        &:active:hover,
        &:focus,
        &:active:focus {
            background-color: darken($primary-color, 4%);
            border-color: darken($primary-color, 5%);
            color: $white;
        }

        &-outline {
            background-color: transparent;
            border-color: $primary-color;
            color: $primary-color;

            &:hover,
            &:active,
            &:active:hover,
            &:focus,
            &:active:focus {
                background-color: $primary-color;
                color: $white;
            }
        }
    }

    &-success {
        border-color: $success-color;
        background-color: $success-color;
        color: $white;

        &:link,
        &:visited {
            color: $white;
        }

        &:hover,
        &:active,
        &:active:hover,
        &:focus,
        &:active:focus,
        &-inverted {
            background-color: darken($success-color, 8%);
            border-color: darken($success-color, 10%);
            color: $white;
        }
    }
}

// BOOTSTRAP PADDING/MARGIN UTILITIES
// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

$spacer: 1rem !default;
$spacers: () !default;
$spacers: map-merge(
    (
        0: 0,
        1: (
            $spacer,
        ),
        2: (
            $spacer * 2,
        ),
        3: (
            $spacer * 3,
        ),
        4: (
            $spacer * 4,
        ),
        5: (
            $spacer * 5,
        ),
    ),
    $spacers
);

@each $prop, $abbrev in (margin: m, padding: p) {
    @each $size, $length in $spacers {
        .#{$abbrev}-#{$size} {
            #{$prop}: $length !important;
        }
        .#{$abbrev}t-#{$size},
        .#{$abbrev}y-#{$size} {
            #{$prop}-top: $length !important;
        }
        .#{$abbrev}r-#{$size},
        .#{$abbrev}x-#{$size} {
            #{$prop}-right: $length !important;
        }
        .#{$abbrev}b-#{$size},
        .#{$abbrev}y-#{$size} {
            #{$prop}-bottom: $length !important;
        }
        .#{$abbrev}l-#{$size},
        .#{$abbrev}x-#{$size} {
            #{$prop}-left: $length !important;
        }
    }
}

.m-auto {
    margin: auto !important;
}
.my-auto,
.mt-auto {
    margin-top: auto !important;
}
.my-auto,
.mb-auto {
    margin-bottom: auto !important;
}
.mx-auto,
.ml-auto {
    margin-left: auto !important;
}
.mx-auto,
.mr-auto {
    margin-right: auto !important;
}
